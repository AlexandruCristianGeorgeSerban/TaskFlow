package com.taskflow.action;

import com.taskflow.model.Category;
import com.taskflow.model.Task;
import com.taskflow.ui.MainFrame;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.ActionEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class TaskDialogAction extends AbstractAction {
	private static final long serialVersionUID = 1L;
    private final MainFrame frame;
    private final boolean isNew;

    public TaskDialogAction(MainFrame frame, boolean isNew) {
        super(isNew ? "Add Task" : "Edit Task");
        this.frame = frame;
        this.isNew = isNew;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Category cat = frame.getSelectedCategory();
        if (cat == null) {
            JOptionPane.showMessageDialog(frame, "Please select a category first.");
            return;
        }

        Task task = isNew ? null : frame.getSelectedTask();
        if (!isNew && task == null) {
            JOptionPane.showMessageDialog(frame, "Please select a task to edit.");
            return;
        }

        // --- build dialog fields ---
        String initTitle = task == null ? "" : task.getTitle();
        String initDesc  = task == null ? "" : task.getDescription();
        String initDate  = task == null
            ? ""
            : new SimpleDateFormat("yyyy-MM-dd").format(task.getDueDate().getTime());
        Color initColor  = task == null
            ? Color.RED
            : Color.decode(task.getColorHex());

        JTextField titleField = new JTextField(initTitle, 20);
        JTextArea  descArea   = new JTextArea(initDesc, 4, 20);
        JTextField dateField  = new JTextField(initDate, 10);

        JLabel colorSwatch = new JLabel("      ");
        colorSwatch.setOpaque(true);
        colorSwatch.setBackground(initColor);
        colorSwatch.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY));
        colorSwatch.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        colorSwatch.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                Color c = JColorChooser.showDialog(frame, "Choose color", colorSwatch.getBackground());
                if (c != null) colorSwatch.setBackground(c);
            }
        });

        JPanel panel = new JPanel(new GridBagLayout());
        GridBagConstraints gc = new GridBagConstraints();
        gc.insets = new Insets(4,4,4,4);
        gc.anchor = GridBagConstraints.WEST;

        gc.gridx=0; gc.gridy=0; panel.add(new JLabel("Title:"), gc);
        gc.gridx=1;            panel.add(titleField, gc);

        gc.gridx=0; gc.gridy=1; panel.add(new JLabel("Description:"), gc);
        gc.gridx=1;            panel.add(new JScrollPane(descArea), gc);

        gc.gridx=0; gc.gridy=2; panel.add(new JLabel("Due Date (yyyy-MM-dd):"), gc);
        gc.gridx=1;            panel.add(dateField, gc);

        gc.gridx=0; gc.gridy=3; panel.add(new JLabel("Color:"), gc);
        gc.gridx=1;            panel.add(colorSwatch, gc);

        int ans = JOptionPane.showConfirmDialog(
            frame, panel,
            isNew ? "Add Task" : "Edit Task",
            JOptionPane.OK_CANCEL_OPTION,
            JOptionPane.PLAIN_MESSAGE
        );
        if (ans != JOptionPane.OK_OPTION) return;

        // --- read values back ---
        String title = titleField.getText().trim();
        String desc  = descArea.getText().trim();
        Calendar due;
        try {
            Date d = new SimpleDateFormat("yyyy-MM-dd").parse(dateField.getText().trim());
            due = Calendar.getInstance();
            due.setTime(d);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(frame, "Invalid date format");
            return;
        }
        String hex = String.format("#%02x%02x%02x",
            colorSwatch.getBackground().getRed(),
            colorSwatch.getBackground().getGreen(),
            colorSwatch.getBackground().getBlue()
        );

        // --- apply add or edit ---
        if (isNew) {
            Task t = new Task(title, desc, due, false, hex);
            frame.getTaskService().addTask(cat, t);
        } else {
            task.setTitle(title);
            task.setDescription(desc);
            task.setDueDate(due);
            task.setColorHex(hex);
            frame.getTaskService().updateTask(task);
        }
        frame.refreshAfterChange(cat);
    }
}

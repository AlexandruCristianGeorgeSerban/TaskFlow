package com.taskflow.action;

import com.taskflow.model.Category;
import com.taskflow.model.RootGroup;
import com.taskflow.ui.MainFrame;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;

/**
 * Acțiune pentru adăugarea unei categorii în cadrul unui RootGroup selectat.
 */
public class AddCategoryAction extends AbstractAction {
    private static final long serialVersionUID = 1L;
    
    // Referință către fereastra principală a aplicației
    private final MainFrame frame;

    /**
     * Constructor care inițializează acțiunea cu referința la fereastra principală.
     *
     * @param frame fereastra principală unde se afișează interfața
     */
    public AddCategoryAction(MainFrame frame) {
        super("Add Category"); // Setează textul butonului/menu-ului
        this.frame = frame;
    }

    /**
     * Metoda apelată la declanșarea acțiunii (ex. apăsare buton).
     * Deschide dialogul pentru nume și culoare, apoi adaugă categoria.
     *
     * @param e evenimentul generației acțiunii
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        // Obține grupul rădăcină selectat
        RootGroup rg = frame.getSelectedRoot();
        if (rg == null) {
            // Afișează mesaj dacă nu e selectată nicio rădăcină
            JOptionPane.showMessageDialog(frame, "Select a root first.", "Info", JOptionPane.INFORMATION_MESSAGE);
            return; // Iese din metodă
        }

        // Cere utilizatorului numele categoriei
        String name = JOptionPane.showInputDialog(frame, "Category name:");
        // Dacă utilizatorul anulează sau lasă gol inputul, nu facem nimic
        if (name == null || name.isBlank()) return;

        // Deschide dialogul de selecție a culorii categoriei
        Color chosen = JColorChooser.showDialog(frame, "Choose category color", Color.BLUE);
        // Convertește culoarea aleasă în cod hex; folosește albastru ca implicit
        String hex = (chosen == null)
            ? "#0000FF"
            : String.format("#%02x%02x%02x", chosen.getRed(), chosen.getGreen(), chosen.getBlue());

        // Adaugă noua categorie în lista de categorii a grupului rădăcină
        rg.getCategories().add(new Category(name.trim(), hex));
        // Reîmprospătează arborele din interfață pentru a afișa categoria nouă
        frame.refreshTreeAll();
    }
}

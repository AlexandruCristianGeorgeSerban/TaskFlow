package com.taskflow.action;

import com.taskflow.model.Category;
import com.taskflow.model.Task;
import com.taskflow.service.TaskService;
import com.taskflow.ui.MainFrame;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/** Deschide dialogul de editare a unui Task (fără completed). */
public class EditTaskAction extends AbstractAction {
    private final MainFrame frame;
    private final TaskService service;

    public EditTaskAction(MainFrame frame, TaskService service) {
        super("Edit Task");
        this.frame = frame;
        this.service = service;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Task t = frame.getSelectedTask();
        if (t == null) {
            JOptionPane.showMessageDialog(frame,
                "Select a task to edit.",
                "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String newTitle = JOptionPane.showInputDialog(frame, "Task title:", t.getTitle());
        if (newTitle == null || newTitle.trim().isEmpty()) return;
        String newDesc = JOptionPane.showInputDialog(frame, "Task description:", t.getDescription());
        String dueStr = JOptionPane.showInputDialog(frame, "Due date (yyyy-MM-dd):",
            new SimpleDateFormat("yyyy-MM-dd").format(t.getDueDate().getTime()));
        Calendar dueDate;
        try {
            Date d = new SimpleDateFormat("yyyy-MM-dd").parse(dueStr);
            dueDate = Calendar.getInstance(); dueDate.setTime(d);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(frame,
                "Invalid date format.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        t.setTitle(newTitle.trim());
        t.setDescription(newDesc != null ? newDesc.trim() : "");
        t.setDueDate(dueDate);
        service.updateTask(t);
        Category cat = frame.getSelectedCategory();
        frame.refreshAfterChange(cat);
    }
}

package com.taskflow.action;

import com.taskflow.model.RootGroup;
import com.taskflow.model.Task;
import com.taskflow.ui.MainFrame;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Text;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.List;

/**
 * Exportă lista curentă de task-uri într-un fișier PDF folosind iText.
 */
public class ExportPdfAction extends AbstractAction {
    private static final long serialVersionUID = 1L;
    private final MainFrame frame;

    public ExportPdfAction(MainFrame frame) {
        super("Export PDF");
        this.frame = frame;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        // Deschide dialog pentru a alege unde salvezi PDF-ul
        JFileChooser chooser = new JFileChooser();
        File ld = frame.getLastDir();
        if (ld != null) chooser.setCurrentDirectory(ld);
        if (chooser.showSaveDialog(frame) != JFileChooser.APPROVE_OPTION) return;

        File file = chooser.getSelectedFile();
        if (!file.getName().toLowerCase().endsWith(".pdf")) {
            file = new File(file.getParentFile(), file.getName() + ".pdf");
        }
        frame.setLastDir(file.getParentFile());

        // Obține task-urile curente din tabel
        List<RootGroup> roots = frame.getTaskService().getAllRoots();

        try (
            // Inițializează writer-ul iText
            PdfWriter writer = new PdfWriter(file);
            PdfDocument pdf = new PdfDocument(writer);
            Document doc = new Document(pdf)
        ) {
            // Titlu
            doc.add(new Paragraph("TaskFlow Report")
                .setBold()
                .setFontSize(16)
            );

            // Linie separatoare
            doc.add(new Paragraph(" "));

            // Adaugă fiecare task ca paragraf
            for (Task t : tasks) {
                String status = t.isCompleted() ? "[x]" : "[ ]";
                String due = String.format("%1$tY-%1$tm-%1$td", t.getDueDate().getTime());
                Paragraph p = new Paragraph()
                    .add(new Text(status + " ").setBold())
                    .add(new Text(t.getTitle()))
                    .add(new Text(" (due " + due + ")").setItalic());
                doc.add(p);
            }

            JOptionPane.showMessageDialog(frame,
                "PDF salvat cu succes:\n" + file.getAbsolutePath(),
                "Export PDF", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            frame.showError(ex);
        }
    }
}
